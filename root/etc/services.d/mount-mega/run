#!/usr/bin/with-contenv bash
# shellcheck shell=bash

# Copyright (c) 2019, PhysK
# All rights reserved.

# shellcheck disable=SC2086
# shellcheck shell=bash

PUID=${PUID:-911}
PGID=${PGID:-911}
DIR_CACHE_TIME=${DIR_CACHE_TIME:-2m}
VFS_READ_CHUNK_SIZE=${VFS_READ_CHUNK_SIZE:-96M}
VFS_CACHE_MAX_AGE=${VFS_CACHE_MAX_AGE:-675h}
VFS_READ_CHUNK_SIZE_LIMIT=${VFS_READ_CHUNK_SIZE_LIMIT:-1G}
VFS_CACHE_MODE=${VFS_CACHE_MODE:-minimal}
VFS_CACHE_MAX_SIZE=${VFS_CACHE_MAX_SIZE:-500G}
BUFFER_SIZE=${BUFFER_SIZE:-48M}
RC_ENABLED=${RC_ENABLED:-false}
RC_ADDR=${RC_ADDR:-0.0.0.0:5572}
RC_USER=${RC_USER:-user}
RC_PASS=${RC_PASS:-xxx}
POLL_INTERVAL=${POLL_INTERVAL:-5m}
MEGANAME=$(head -n 1 /config/rclone-docker.conf | sed 's/[][]//g')
MEGAUID=$(cat /config/rclone-docker.conf | grep 'user' | awk '{print $3}' | head -n 1)

if [ "${RC_ENABLED}" == "true" ]; then
    RC_CMD="--rc --rc-addr ${RC_ADDR} --rc-user ${RC_USER} --rc-pass ${RC_PASS}"
fi

rm -rf /logs/mega-nz.rclone.log;
touch /logs/mega-nz.rclone.log;
chmod 777 /logs/mega-nz.rclone.log;

if [[ ! -e /mnt/mega-nz ]]; then
    mkdir -p /mnt/mega-nz
elif [[ ! -d /mnt/mega-nz ]]; then
    echo "/mnt/mega-nz already exists but is not a directory" 1>&2
fi

umask 022

mount_command="/usr/bin/rclone \
--allow-non-empty \
--allow-other \
mount mega-nz: /mnt/mega-nz \
--uid=${PUID} \
--gid=${PGID} \
--size-only \
--cache-dir /move \
--dir-cache-time ${DIR_CACHE_TIME} \
--vfs-read-chunk-size ${VFS_READ_CHUNK_SIZE} \
--vfs-cache-max-age ${VFS_CACHE_MAX_AGE} \
--vfs-read-chunk-size-limit ${VFS_READ_CHUNK_SIZE_LIMIT} \
--vfs-cache-mode ${VFS_CACHE_MODE} \
--vfs-cache-max-size ${VFS_CACHE_MAX_SIZE} \
--poll-interval ${POLL_INTERVAL} \
--buffer-size ${BUFFER_SIZE} \
--umask 002 \
${RC_CMD}
--log-level DEBUG \
--config /config/rclone-docker.conf \
--log-file /logs/mega-nz.rclone.log"


echo "-> Mounting mega-nz <-"
exec s6-setuidgid abc $mount_command
